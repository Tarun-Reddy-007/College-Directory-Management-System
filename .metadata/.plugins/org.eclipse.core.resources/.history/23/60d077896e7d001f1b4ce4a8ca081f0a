package com.example.collegedirectory.controllers;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.example.collegedirectory.entities.User;
import com.example.collegedirectory.services.UserService;

@RestController
@RequestMapping("/api/users")
public class UserController {
    @Autowired
    private UserService userService;

    @PostMapping("/login")
    public ResponseEntity<Map<String, Object>> login(@RequestBody Map<String, String> credentials) {
        String username = credentials.get("username");
        String password = credentials.get("password");
        String role = credentials.get("role");
        
        // Call the updated authenticate method
        User user = userService.authenticate(username, password, role); 
        
        if (user != null) {
            // If user is authenticated, return the user ID along with a success message
            return ResponseEntity.ok(Map.of(
                "message", "Login successful",
                "userId", user.getId() // Assuming User has a getId() method
            ));
        } else {
            return ResponseEntity.status(401).body(Map.of("message", "Invalid username, password, or role"));
        }
    }
    
    @GetMapping("/username/{username}")
    public ResponseEntity<User> getUserDetailsByUsername(@PathVariable String username) {
        User user = userService.findByUsername(username);
        if (user != null) {
            return ResponseEntity.ok(user);
        } else {
            return ResponseEntity.notFound().build();
        }
    }
    
    @GetMapping("/id/{id}")
    public ResponseEntity<User> getUserDetailsById(@PathVariable Long id) {
    	System.out.println("Request received for user ID: " + id);
        User user = userService.findById(id);
        if (user != null) {
            return ResponseEntity.ok(user);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

}
