package com.example.collegedirectory.entities;

import jakarta.persistence.*;

import java.io.Serializable;
import java.util.Objects;

@Entity
@Table(name = "faculty_advisors")
@IdClass(FacultyAdvisors.class) // Use this annotation for composite key
public class FacultyAdvisors implements Serializable {

    @Id
    @Column(name = "student_id")
    private Long studentId; // Part of the composite primary key

    @Id
    @Column(name = "faculty_id")
    private Long facultyId; // Part of the composite primary key

    // Student relationship
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "student_id", referencedColumnName = "id", insertable = false, updatable = false)
    private User student;

    // Faculty relationship
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "faculty_id", referencedColumnName = "id", insertable = false, updatable = false)
    private User faculty;

    // Default constructor
    public FacultyAdvisors() {}

    // Constructor with parameters for composite key
    public FacultyAdvisors(Long studentId, Long facultyId) {
        this.studentId = studentId;
        this.facultyId = facultyId;
    }

    // Getters and setters
    public Long getStudentId() {
        return studentId;
    }

    public void setStudentId(Long studentId) {
        this.studentId = studentId;
    }

    public Long getFacultyId() {
        return facultyId;
    }

    public void setFacultyId(Long facultyId) {
        this.facultyId = facultyId;
    }

    public User getStudent() {
        return student;
    }

    public void setStudent(User student) {
        this.student = student;
    }

    public User getFaculty() {
        return faculty;
    }

    public void setFaculty(User faculty) {
        this.faculty = faculty;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof FacultyAdvisors)) return false;
        FacultyAdvisors that = (FacultyAdvisors) o;
        return Objects.equals(studentId, that.studentId) &&
               Objects.equals(facultyId, that.facultyId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(studentId, facultyId);
    }
}
