package com.example.collegedirectory.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.example.collegedirectory.entities.Course;
import com.example.collegedirectory.entities.Department;
import com.example.collegedirectory.repositories.DepartmentRepository;
import com.example.collegedirectory.services.CourseService;
import com.example.collegedirectory.services.DepartmentService;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/courses")
public class CourseController {
    @Autowired
    private CourseService courseService;
    @Autowired
    private DepartmentService departmentService;
    
    @Autowired
    private DepartmentRepository departmentRepository;

    @GetMapping("/getall")
    public ResponseEntity<List<Course>> getAllCourses() {
        List<Course> courses = courseService.getAllCourses();
        return ResponseEntity.ok(courses);
    }

    @PostMapping("/addcourse")
    public ResponseEntity<?> addCourse(@RequestBody Map<String, Object> courseData) {
        // Retrieve department name from the request
        String departmentName = (String) courseData.get("departmentName");
        String title = (String) courseData.get("title");
        String description = (String) courseData.get("description");
        Long facultyId = ((Number) courseData.get("faculty")).longValue(); // Convert to Long
        
        // Look for the department by name
        Department department = departmentRepository.findByName(departmentName);
        
        if (department == null) {
            return ResponseEntity.badRequest().body("Department not found.");
        }
        
        // Create and save the course
        Course course = new Course();
        course.setTitle(title);
        course.setDescription(description);
        course.setFaculty(facultyId); // Assuming this is just an ID
        course.setDepartment(department); // Use the department object directly
        
        courseService.save(course);
        
        return ResponseEntity.ok("Course added successfully.");
    }
}
