package com.example.collegedirectory.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.example.collegedirectory.entities.Course;
import com.example.collegedirectory.entities.Department;
import com.example.collegedirectory.entities.FacultyProfile;
import com.example.collegedirectory.repositories.CourseRepository;
import com.example.collegedirectory.repositories.DepartmentRepository;
import com.example.collegedirectory.repositories.FacultyProfileRepository;

import java.util.List;

@Service
public class CourseService {
    @Autowired
    private CourseRepository courseRepository;
    
    @Autowired
    private DepartmentRepository departmentRepository;

    @Autowired
    private FacultyProfileRepository facultyProfileRepository;

    // Method to get all courses
    public List<Course> getAllCourses() {
        return courseRepository.findAll();
    }

    // Method to add a course
    public Course addCourse(Course course) {
        // Fetch department using departmentName
        Department department = departmentRepository.findByName(course.getDepartment().getName())
                .orElseThrow(() -> new IllegalArgumentException("Department not found: " + course.getDepartment().getName()));

        // Set the fetched department in the course
        course.setDepartment(department);

        // Optionally fetch and set the faculty profile based on faculty ID (if needed)
        FacultyProfile faculty = facultyProfileRepository.findById(course.getFaculty().getId())
                .orElseThrow(() -> new IllegalArgumentException("Faculty not found with ID: " + course.getFaculty().getId()));

        course.setFaculty(faculty);

        // Save the course to the database
        return courseRepository.save(course);
    }
    
    // Method to save a course
    public void save(Course course) {
        courseRepository.save(course); // Save the course to the database
    }
}
